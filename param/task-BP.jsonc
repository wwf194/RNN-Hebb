{
    "Task": "PredictXYs",
    "Main":[
        {
            "DoTasks":"&^param.task.Init"
        },
        {
            //"Train":"&^param.task.Train"
            "DoTasks":"&^param.task.Train"
        }
    ],
    "Load":{
        "In":["SaveDir"],
        "__Tasks__":[
            {
                "LoadObjFromFile":{
                    "SaveDir":["&~cache.In.SaveDir"],
                    "SaveName": ["agent"],
                    "MountPath": ["/&^object.agent"],
                },
            },
            {
                "LoadObj":{
                    "SourcePath": ["&^object.agent.param"],
                    "MountPath": ["/&^param.agent"],
                },
            },
            "ParseParamStatic",
            {
                "FunctionCall":[
                    ["&^object.world.LoadFromParam"],
                    ["&^object.agent.LoadFromParam"],
                ],
            },
            {
                "DoTasks": "&^param.task.BeforeTrain"
            }
        ],
    },
    "Save":{ // Save models.
        "In": ["SaveDir"],
        "__Tasks__":[
            {
                "FunctionCall":[
                    ["&^object.agent.Save", ["Name=agent", "&~cache.In.SaveDir"]],
                    ["&^object.world.Save", ["Name=world", "&~cache.In.SaveDir"]],
                ]
            },
            {
                "RemoveObj":{
                    "MountPath":[
                        "/&^object.agent",
                        "/&^object.world",
                        "/&^param.agent",
                        "/&^param.world"
                    ]
                },
            },
        ],
    },
    "Init":[
        {
            "LoadParamFile":[
                {
                    "FilePath":[
                        "./param/RNNLIF.jsonc", 
                        "./param/image.jsonc", 
                        "./param/agent.jsonc"
                    ],
                    "MountPath":[
                        "/&^param.model",
                        "/&^param.image",
                        "/&^param.agent"
                    ]
                }
            ],
        },
        "ParseParamStatic",
        {
            "RemoveObj":{
                "MountPath":["/&^param.model"] //Already parsed into &^param.agent
            },
        },
        {
            "BuildObjFromParam":{
                "ParamPath": ["&^param.world", "&^param.agent"],
                "ModulePath": ["World2D.Arenas2D", "Agents.AgentPoint2D"],
                "MountPath": ["/&^object.world", "/&^object.agent"],
            },
        },
        "ParseParamStatic",
        {
            "FunctionCall":[
                "&^object.world.InitFromParam",
                "&^object.agent.InitFromParam",
                ["&^object.agent.SetFullName", "agent"],
                ["&^object.world.SetFullName", "world"],
                "&^object.agent.PlotPlaceCellsActivity",
            ],
        },
        {
            "DoTasks": "&^param.task.BeforeTrain"
        }
    ],
    "BeforeTrain":[
        "ParseParamStatic",
        "SetTensorLocation",
        {
            "FunctionCall": [
                "&^object.agent.cache.Modules.model.SetTrainWeight",
                "&#utils_torch.ExternalMethods.AddObjRefForParseRouters",
                "&#utils_torch.ExternalMethods.RegisterExternalMethods",
                "&^object.agent.Modules.Dataset.LoadData",
                "&^object.agent.Modules.Dataset.ApplyTransformOnData"

            ]
        },
    ],
    "Train":{
        "Epoch.Num": 200,
        "BatchParam":{
            "Images.Num": "$Batch.Size"
        },
        "OptimizeParam":{
            "Method": "GradientDescend",
            "LearningRate": 1.0e-3,
            "WeightDecay": 0.0,
            "Momentum": 0.0,
            "Dampening": 0.0, 
            "Nesterov": false,
        },
        "__Tasks__":[
            {
                "BuildObjFromFile":{
                    "ParamFilePath": "./param/TrainerFroEpochBatchTraining.jsonc",
                    "ClassPath": "utils_torch.train.TrainerFroEpochBatchTraining",
                    "MountPath": "&^object.trainer",
                },
            },
            {
                "CallGraph": {
                    "Router": "&^object.trainer.Main",
                    "In": ["$Epoch.Num", "$BatchParam", "$OptimizeParam", "$NotifyEpochBatchList"],
                },
            },
        ]
    },
}