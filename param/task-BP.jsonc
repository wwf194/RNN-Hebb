{
    "Task": "TrainBP-CIFAR10",
    "Main":[
        {
            "DoTasks":"&^param.task.Init"
        },
        {
            //"Train":"&^param.task.Train"
            "DoTasks":"&^param.task.Train"
        }
    ],
    "Load":{
        "In":["SaveDir"],
        "__Tasks__":[
            {
                "LoadObjFromFile":{
                    "SaveDir":["&~cache.In.SaveDir"],
                    "SaveName": ["agent"],
                    "MountPath": ["/&^object.agent"],
                },
                // "FunctionCall":[
                //     ["&^object.agent.LoadFromFile", ["LoadDir=&~cache.In.SaveDir", "Name=agent"]],
                // ]
            },
            {
                "LoadObj":{
                    "SourcePath": ["&^object.agent.param"],
                    "MountPath": ["/&^param.agent"],
                },
            },
            "ParseParamStatic",
            {
                "FunctionCall":[
                    "&^object.agent.LoadFromParam",
                ],
            },
            {
                "DoTasks": "&^param.task.BeforeTrain"
            }
        ],
    },
    "Save":{ // Save models.
        "In": ["SaveDir"],
        "__Tasks__":[
            {
                "FunctionCall":[
                    ["&^object.agent.Save", ["Name=agent", "&~cache.In.SaveDir"]],
                ]
            },
            {
                "RemoveObj":{
                    "MountPath":[
                        "/&^object.agent",
                        "/&^param.agent",
                    ]
                },
            },
        ],
    },
    "Init":[
        {
            "LoadParamFile":[
                {
                    "FilePath":[
                        "./param/RNNLIF.jsonc", 
                        "./param/Dataset.jsonc", 
                        "./param/agent.jsonc"
                    ],
                    "MountPath":[
                        "/&^param.model",
                        "/&^param.image",
                        "/&^param.agent"
                    ]
                }
            ],
        },
        "ParseParamStatic",
        {
            "RemoveObj":{
                "MountPath":["/&^param.model"] //Already parsed into &^param.agent
            },
        },
        {
            "BuildObjFromParam":{
                "ParamPath": ["&^param.agent", "&^param.image"],
                "ModulePath": ["Agents.Agent", "utils_torch.Datasets.CIFAR10.DataLoaderForEpochBatchTraining"],
                "MountPath": ["/&^object.agent", "/&^object.image"],
            },
        },
        "ParseParamStatic",
        {
            "FunctionCall":[
                "&^object.agent.InitFromParam",
                "&^object.image.InitFromParam",
                ["&^object.agent.SetFullName", "agent"],
                ["&^object.image.SetFullName", "image"],
                "&^object.image.LoadData",
                "&^object.image.ApplyTransformOnData",
            ],
        },
        {
            "DoTasks": "&^param.task.BeforeTrain"
        },
        {
            "DoTasks": "&^param.task.BuildTrainer"
        },
    ],
    "BuildDataset":[
        {
            "LoadParamFile":[
                {
                    "FilePath": "./param/Dataset.jsonc", 
                    "MountPath":"/&^param.image",

                }
            ],
        },
        "ParseParamStatic",
        {
            "BuildObjFromParam":{
                "ParamPath": ["&^param.image"],
                "ModulePath": ["utils_torch.Datasets.CIFAR10.DataLoaderForEpochBatchTraining"],
                "MountPath": ["/&^object.image"],
            },
        },
        "ParseParamStatic",
        {
            "FunctionCall":[
                "&^object.image.InitFromParam",
                ["&^object.image.SetFullName", "image"],
                "&^object.image.LoadData",
                "&^object.image.ApplyTransformOnData",
            ],
        },
    ],
    "BuildTrainer":[
        {
            "BuildObjFromFile":{
                "ParamFilePath": "./param/trainer.jsonc",
                "ModulePath": "utils_torch.ExternalClasses.Trainer",
                "MountPath": "&^object.trainer",
            },
        },
        "ParseParamStatic",
        {
            "FunctionCall": [
                //["&^object.trainer.RegisterExternalMethod", ["SaveAndLoad", "&#utils_torch.ExternalMethods.SaveAndLoad"]], // Set Save and Load Method
                //#["&^object.trainer.RegisterExternalMethod", ["AnalyzeBeforeTrain", "&#utils_torch.ExternalMethods.AnalyzeBeforeTrain"]], // Set AnalyzeAfterBatch Method
                //["&^object.trainer.RegisterExternalMethod", ["AnalyzeAfterBatch", "&#utils_torch.ExternalMethods.AnalyzeAfterBatch"]], // Set AnalyzeAfterBatch Method
                "&^object.trainer.InitFromParam",
            ]
        },
    ],
    "BeforeTrain":[
        "ParseParamStatic",
        "SetTensorLocation",
        {
            "FunctionCall": [
                "&^object.agent.cache.Modules.model.SetTrainWeight",
                //"&#utils_torch.ExternalMethods.AddObjRefForParseRouters",
                //"&#utils_torch.ExternalMethods.RegisterExternalMethods",
            ]
        },
    ],
    "Train":{
        "Epoch.Num": 200,
        "Batch.Size": 64, 
        "BatchParam":{
            "Batch.Size": "$Batch.Size"
        },
        "OptimizeParam":{
            "Method": "GradientDescend",
            "LearningRate": 1.0e-3,
            "WeightDecay": 0.0,
            "Momentum": 0.0,
            "Dampening": 0.0, 
            "Nesterov": false,
        },
        "NotifyEpochBatchList":[
            "&^log.DataTrain"
        ],
        "__Tasks__":[
            {
                "FunctionCall": [
                    [
                        "&^object.trainer.Train",
                        ["&^object.agent", "&~Epoch.Num", "&~BatchParam", "&~OptimizeParam", "&~NotifyEpochBatchList"],
                    ]
                ],
            },
        ]
    },

    "BuildLogger":[
        { // Build data logger.
            "BuildObj":{
                "ModulePath": [
                    "utils_torch.log.LogForEpochBatchTrain",
                    "utils_torch.log.LogForEpochBatchTrain"
                ],
                "MountPath":[
                    "&^log.DataTrain",
                    "&^log.DataTest",
                ]
            }
        },
    ]
}